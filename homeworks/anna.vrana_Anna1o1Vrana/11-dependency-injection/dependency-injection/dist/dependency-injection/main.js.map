{"version":3,"sources":["./src/app/table/table.component.ts","./src/app/table/table.component.html","./src/environments/environment.ts","./src/app/services/vehicle.service.ts","./src/app/pipes/transforn-vehicle.pipe.ts","./src/app/mocks/vehicles.mock.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/directive/decoration-protocol.directive.ts","./src/app/services/index.ts","./src/app/pipes/index.ts","./src/app/directive/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { VehicleService } from '../services'\n\nimport { Vehicle } from \"../models/vehicle.model\";\nimport {finalize} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent {\n  vehicles: Vehicle[] = [];\n\n  areVehicleLoading: boolean = false;\n\n  constructor(private vehicleService: VehicleService) {\n    this.getVehicle();\n  }\n\n  private getVehicle(): void {\n    this.areVehicleLoading = true;\n\n    this.vehicleService.getVehicle()\n      .pipe(finalize( () => this.areVehicleLoading = false) )\n      .subscribe(( vehicle: Vehicle[] ) => this.vehicles = vehicle);\n  }\n\n}\n","<div *ngIf=\"areVehicleLoading\">Loading...</div>\n\n<table class=\"table\" *ngIf=\"!areVehicleLoading\">\n  <caption class=\"table-title\">\n    List of cars\n  </caption>\n  <tr>\n    <th class=\"table-header\"></th>\n    <th class=\"table-header\">Added from</th>\n    <th scope=\"col\" class=\"table-header\">Vehicle</th>\n    <th scope=\"col\" class=\"table-header\">Price</th>\n  </tr>\n  <tr *ngFor=\"let vehicle of vehicles; let i=index\">\n\n    <td>{{ i + 1 }}</td>\n    <td appDecorationProtocol>{{ vehicle.post.protocol }}</td>\n    <td>{{vehicle | transformVehiclePipe}}</td>\n    <td>{{ vehicle.cost.amount | currency: vehicle.cost.currencyCode : 'symbol-narrow'  }}</td>\n  </tr>\n\n</table>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Observable, of} from \"rxjs\";\nimport { delay } from \"rxjs/operators\";\n\nimport { Vehicle } from \"../models/vehicle.model\";\nimport { MOCK_VEHICLES } from \"../mocks/vehicles.mock\";\n\n@Injectable()\nexport class VehicleService {\n\n  constructor() {\n  }\n\n  getVehicle(): Observable<Vehicle[]> {\n    return of(MOCK_VEHICLES).pipe(\n      delay(2000),\n    );\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {Vehicle} from \"../models/vehicle.model\";\n\n@Pipe({\n  name: 'transformVehiclePipe'\n})\n\nexport class TransformVehiclePipe implements PipeTransform {\n  transform(vehicle: Vehicle): string {\n    return `${ vehicle.manufacturer } - ${ vehicle.model } (${ vehicle.fuel })`\n  }\n}\n","import * as faker from 'faker';\n\n\nconst count = 20;\nlet seed = 1222;\n\n// tslint:disable-next-line:typedef\nfunction getFakeVehicle() {\n  seed += 1;\n  faker.seed(seed);\n\n  return {\n    color: faker.vehicle.color(),\n    fuel: faker.vehicle.fuel(),\n    manufacturer: faker.vehicle.manufacturer(),\n    model: faker.vehicle.model(),\n    type: faker.vehicle.type(),\n    vehicle: faker.vehicle.vehicle(),\n    vin: faker.vehicle.vin(),\n\n    post: {\n      slug: faker.helpers.slugify(faker.name.title()),\n      protocol: faker.internet.protocol(),\n    },\n\n    cost: {\n      account: faker.finance.account(),\n      accountName: faker.finance.accountName(),\n      amount: faker.finance.amount(),\n      currencyCode: faker.finance.currencyCode(),\n    },\n  };\n}\n\nexport const MOCK_VEHICLES = new Array(count).fill(0).map(getFakeVehicle);\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'dependency-injection';\n}\n","<h1 class=\"headline>\">\n  List of cars\n</h1>\n<app-table></app-table>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { TableComponent } from './table/table.component';\nimport { appServices } from \"./services\";\nimport { appDirective } from \"./directive\";\nimport { appPipes } from \"./pipes\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TableComponent,\n    ...appDirective,\n    ...appPipes,\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [\n    ...appServices,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Directive, ElementRef, Input} from '@angular/core';\n\n@Directive({selector: '[appDecorationProtocol]'})\nexport class DecorationProtocolDirective {\n  @Input() appDecorationProtocol: string;\n\n  constructor(private el: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    if(this.el.nativeElement.innerHTML === 'http'){\n      this.el.nativeElement.style.color = '#FA0202'\n    }\n  }\n}\n","import { VehicleService } from './vehicle.service'\n\nexport const appServices = [\n  VehicleService,\n]\n\nexport * from './vehicle.service';\n","import {TransformVehiclePipe} from \"./transforn-vehicle.pipe\";\n\nexport const appPipes = [\n  TransformVehiclePipe\n];\n\nexport * from './transforn-vehicle.pipe'\n","import {DecorationProtocolDirective} from \"./decoration-protocol.directive\";\n\nexport const appDirective = [\n  DecorationProtocolDirective\n]\n\nexport * from './decoration-protocol.directive'\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}